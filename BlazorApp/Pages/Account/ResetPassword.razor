@page "/forgot-password"
@using System.ComponentModel.DataAnnotations

<div class="container">
    <button @onclick="ToggleFormVisibility" class="btn">Забыли пароль?</button>

    @if (showForm)
    {
        <div class="form-container">
            <h2>Восстановление пароля</h2>
            <p>Пожалуйста, введите свою электронную почту, чтобы получить новый пароль.</p>

            <EditForm Model="emailModel" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <InputText type="email" id="email" class="input-field" @bind-Value="emailModel.Email" placeholder="Введите вашу почту" />
                <button type="submit" class="btn">Отправить новый пароль</button>
            </EditForm>

            @if (!string.IsNullOrEmpty(message))
            {
                <p>@message</p>
            }

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <p style="color: red;">@errorMessage</p>
            }
        </div>
    }
</div>

@code {
    private bool showForm = false;
    private string message;
    private string errorMessage;

    // Модель для email
    private EmailModel emailModel = new EmailModel();

    // Класс модели
    public class EmailModel
    {
        [Required(ErrorMessage = "Пожалуйста, введите свою электронную почту")]
        [EmailAddress(ErrorMessage = "Неправильный формат email")]
        public string Email { get; set; }
    }

    // Показать/скрыть форму
    private void ToggleFormVisibility()
    {
        showForm = !showForm;
    }

    // Обработка отправки формы
    private async Task HandleSubmit()
    {
        try
        {
            // Вызов вашего сервиса для сброса пароля через HTTP-клиент
            var response = await Http.PostAsJsonAsync("api/account/reset-password", emailModel);

            if (response.IsSuccessStatusCode)
            {
                message = "Новый пароль отправлен на вашу почту.";
                errorMessage = string.Empty;
            }
            else
            {
                errorMessage = "Произошла ошибка при отправке запроса.";
                message = string.Empty;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Ошибка: {ex.Message}";
        }
    }

    // Внедряем HttpClient для выполнения HTTP-запросов
    [Inject]
    private HttpClient Http { get; set; }
}
